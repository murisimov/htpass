#!/bin/sh
### BEGIN INIT INFO
# Provides:          Htpass
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Htpass daemon
### END INIT INFO

APPDIR="/usr/gm/htpass"
ENTERENV="source ${APPDIR}/env/bin/activate"
SCRIPT="${ENTERENV}; uwsgi --ini ${APPDIR}/nginx/htpass.ini"
NAME='Htpass'

if [ -n "$(grep "nginx" /etc/passwd)" ]; then
    RUNAS="nginx"
elif [ -n "$(grep "www-data" /etc/passwd)" ]; then
    RUNAS="www-data"
else
    echo
    echo "No Nginx group found, are you sure you have Nginx installed?"
    exit 1
fi

# Run as group
#RUNAS=www-data

PIDFILE='/home/htpass/htpass.pid'
LOGFILE='/home/htpass/htpass.log'

#env PATH=/usr/gm/htpass/env/bin 1> /dev/null

start() {
    if ! [ -d ${PIDFILE%/*} ] ; then
        mkdir -p ${PIDFILE%/*}
    fi
    if [ -f ${PIDFILE} ] && kill -0 $(cat ${PIDFILE}); then
        echo 'Service is already running' >&2
        return 1
    fi
    echo 'Starting service…' >&2

    local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"

    # Try to start service
    if sg $RUNAS -c "$CMD"  > "$PIDFILE"; then
        echo 'Service started' >&2
        exit 0
    else
        echo 'Service start failed!'
        return 1
    fi
}

stop() {
    if [ ! -f ${PIDFILE} ] || ! kill -0 $(cat ${PIDFILE}); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Stopping service…' >&2
    kill -15 $(cat ${PIDFILE}) && rm -f ${PIDFILE} &&\
    echo 'Service stopped' >&2||\
    echo 'Service stop failed!' &&\
    return 1
}

status() {
        printf "%-50s" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
            if [ -z "$(ps axf | grep ${PID} | grep -v grep)" ]; then
                printf "%s\n" "The process appears to be dead but pidfile still exists"
            else
                echo "Running, the PID is $PID"
            fi
    else
        printf "%s\n" "Service not running"
    fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload}"
esac
